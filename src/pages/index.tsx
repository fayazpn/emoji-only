import { SignInButton, useUser } from "@clerk/nextjs";
import Head from "next/head";

import { type RouterOutputs, api } from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";
import {  PageLoader } from "~/components/Loading";

dayjs.extend(relativeTime);

function CreatePostWizard() {
  const { user } = useUser();

  if (!user) return null;

  return (
    <div className="flex gap-3">
      <Image
        src={user.imageUrl}
        alt="Profile Image"
        className="rounded-full"
        height={64}
        width={64}
      />
      <input
        type="text"
        className="grow bg-transparent outline-none"
        placeholder="Type some emojis to tweet"
      />
    </div>
  );
}

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { author, content, createdAt } = props;
  console.log(author)
  // Todo make the profile blur
  return (
    <div className="flex gap-3 border-b border-slate-400 p-8" key={props.id}>
      <Image
        src={author.imageUrl}
        alt="Profile Image"
        className="rounded-full"
        height={56}
        width={56}
        placeholder="blur"
        blurDataURL={author.blurredDataUrl}
      />
      <div className="flex flex-col">
        <div className="flex gap-2 text-slate-500">
          <span className="font-bold text-slate-300">{`@${author.username}`}</span>
          <span>Â·</span>
          <span>{dayjs().to(createdAt)}</span>
        </div>
        <span>{content}</span>
      </div>
    </div>
  );
};

const Feed = () => {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery();
  if (postsLoading) return <PageLoader />;

  return <>{data?.map((post) => <PostView {...post} key={post.id} />)}</>;
};

export default function Home() {
  const { isSignedIn, isLoaded: userLoaded } = useUser();

  // start fetching before Feed component is mounted
  api.posts.getAll.useQuery();

  // Return empty if user is not loaded
  if(!userLoaded) return <div />

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="w-full border-x border-slate-400 md:max-w-2xl">
          <div className=" w-full  border-b border-slate-400 p-4">
            {!isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}
            {isSignedIn && <CreatePostWizard />}
          </div>

          <Feed />
        </div>
      </main>
    </>
  );
}
